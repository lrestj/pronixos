{"clipboardHistory":[{"value":":source-file ~/.tmux.conf","recorded":"2025-08-08 19:36:10.306089525","filePath":"null","pinned":false},{"value":"unbind C-b\nset -g prefix C-a\nbind C-a send-prefix","recorded":"2025-08-08 19:17:08.460662020","filePath":"null","pinned":false},{"value":"source-file~/.tmux.conf","recorded":"2025-08-08 19:12:20.449344346","filePath":"null","pinned":false},{"value":"/run/current-system/sw/bin/fish","recorded":"2025-08-08 19:08:58.633931646","filePath":"null","pinned":false},{"value":"# Set the prefix to ^A.\nunbind C-b\nset -g prefix ^A\nbind a send-prefix","recorded":"2025-08-08 19:06:55.879581006","filePath":"null","pinned":false},{"value":"set -g default-command /usr/local/bin/fish\nset -g default-shell /usr/local/bin/fish","recorded":"2025-08-08 19:05:01.874929121","filePath":"null","pinned":false},{"value":"if type -q tmux\n    if not test -n \"$TMUX\"\n        tmux attach-session -t default; or tmux new-session -s default\n    end\nend","recorded":"2025-08-08 18:56:07.038648088","filePath":"null","pinned":false},{"value":"Hlavy státu","recorded":"2025-08-08 18:19:56.462464405","filePath":"null","pinned":false},{"value":"jak vycvicit draka 2025 cz dabing","recorded":"2025-08-08 18:15:33.419482645","filePath":"null","pinned":false},{"value":"[font.normal]\nfamily = \"3270NerdFont\"","recorded":"2025-08-08 17:15:58.373424610","filePath":"null","pinned":false},{"value":"/home/libor/.dotfiles/icons/debian.png","recorded":"2025-08-08 15:12:45.271390109","filePath":"null","pinned":false},{"value":"/home/libor/.config/vim/plugged/fzf/shell/key-bindings.fish","recorded":"2025-08-07 10:24:18.504376931","filePath":"null","pinned":false},{"value":"# fzf on Fedora\n        if [ -x \"$(command -v fzf)\"  ]\n        then\n            source /usr/share/fzf/shell/key-bindings.bash\n        fi\n","recorded":"2025-08-07 10:23:46.313213828","filePath":"null","pinned":false},{"value":"let g:peekaboo_prefix = '\"'\nlet g:peekaboo_ins_prefix = '\u003cc-e\u003e'","recorded":"2025-08-05 16:53:06.833366795","filePath":"null","pinned":false},{"value":"env=ELECTRON_OZONE_PLATFORM_HINT,wayland ","recorded":"2025-08-05 13:46:26.134060684","filePath":"null","pinned":false},{"value":"env=ELECTRON_OZONE_PLATFORM_HINT,wayland","recorded":"2025-08-05 13:44:55.629562897","filePath":"null","pinned":false},{"value":"/var/lib/flatpak","recorded":"2025-08-05 13:39:45.815796397","filePath":"null","pinned":false},{"value":"/var/lib/flatpak/app/org.vim.Vim/current/active/files/share/vim","recorded":"2025-08-05 13:26:34.920422144","filePath":"null","pinned":false},{"value":"/home/libor/.config/vim/vimrc","recorded":"2025-08-05 12:51:04.483170405","filePath":"null","pinned":false},{"value":"org.vim.Vim","recorded":"2025-08-05 12:29:59.410204001","filePath":"null","pinned":false},{"value":"services.flatpak.enable = true;","recorded":"2025-08-05 12:23:09.802083689","filePath":"null","pinned":false},{"value":"nix-flatpak.nixosModules.nix-flatpak","recorded":"2025-08-05 12:15:25.004443183","filePath":"null","pinned":false},{"value":"nix-flatpak.url = \"github:gmodena/nix-flatpak/?ref=latest\";","recorded":"2025-08-05 12:13:19.402329942","filePath":"null","pinned":false},{"value":"*** buffer overflow detected ***: terminated","recorded":"2025-08-04 21:30:12.650458300","filePath":"null","pinned":false},{"value":"Vim: Caught deadly signal ABRT","recorded":"2025-08-04 21:29:31.164870365","filePath":"null","pinned":false},{"value":"make VIMRUNTIMEDIR=/usr/local/share/vim/vim80","recorded":"2025-08-04 20:33:40.686483820","filePath":"null","pinned":false},{"value":"nix-shell -p gnumake gcc clang ncurses vim-full xorg.libXt libgtkflow3","recorded":"2025-08-04 20:05:22.123732894","filePath":"null","pinned":true},{"value":"❎","recorded":"2025-08-04 19:59:35.353992081","filePath":"null","pinned":false},{"value":"GTK_THEME=Adwaita:","recorded":"2025-08-04 19:49:35.268883107","filePath":"null","pinned":false},{"value":"/home/libor/.local/src/vim/runtime/defaults.vim","recorded":"2025-08-01 17:16:18.090314455","filePath":"null","pinned":false},{"value":"/home/libor/.local/src/vim/runtime/vimrc_example.vim","recorded":"2025-08-01 17:03:28.700229827","filePath":"null","pinned":false},{"value":"libgtkflow3","recorded":"2025-08-01 16:21:12.744722982","filePath":"null","pinned":false},{"value":"xorg.libXt","recorded":"2025-08-01 16:21:01.679094556","filePath":"null","pinned":false},{"value":"x11basic","recorded":"2025-08-01 16:12:07.654503224","filePath":"null","pinned":false},{"value":"include \u003cX11/Xlib.h\u003e\n","recorded":"2025-08-01 16:08:53.349437134","filePath":"null","pinned":false},{"value":"--enable-fail-if-missing","recorded":"2025-08-01 15:58:40.900645596","filePath":"null","pinned":false},{"value":"./configure --with-features=huge --enable-multibyte --enable-rubyinterp=yes --enable-pythoninterp=yes --enable-python3interp=yes --enable-perlinterp=yes --enable-luainterp=yes --enable-cscope --prefix=/home/libor/.nix-profile/","recorded":"2025-08-01 15:34:01.971860323","filePath":"null","pinned":false},{"value":"./configure --with-features=huge --enable-multibyte --enable-rubyinterp=yes --enable-pythoninterp=yes --enable-python3interp=yes --enable-perlinterp=yes --enable-luainterp=yes --enable-cscope --prefix=/usr/local","recorded":"2025-08-01 15:33:05.830412058","filePath":"null","pinned":false},{"value":"/home/libor/.local/src/vim/src/vim","recorded":"2025-08-01 15:21:47.198074135","filePath":"null","pinned":false},{"value":"Caught deadly signal ABRT","recorded":"2025-08-01 15:03:00.663244136","filePath":"null","pinned":false},{"value":"libtool: command not found","recorded":"2025-08-01 15:00:22.418106590","filePath":"null","pinned":false},{"value":"-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1 ","recorded":"2025-08-01 14:37:06.410049398","filePath":"null","pinned":false},{"value":"/home/libor/.local/bin/bin/vim","recorded":"2025-08-01 13:57:23.638503969","filePath":"null","pinned":false},{"value":"[AQ] Implementation wayland failed, erasing","recorded":"2025-08-01 11:42:09.112739114","filePath":"null","pinned":false},{"value":"Cannot open backend: no allocator available\n","recorded":"2025-08-01 11:33:53.335637917","filePath":"null","pinned":false},{"value":"loginctl kill-user $(whoami)","recorded":"2025-08-01 11:21:20.917167638","filePath":"null","pinned":false},{"value":"31cc7f3b87d1d9670b66e73e3720da2e2da49acd","recorded":"2025-08-01 10:48:11.799636107","filePath":"null","pinned":false},{"value":" matchstr(execute('version'), 'Vi IMproved \\zs\\d[^ ]*')\n","recorded":"2025-07-31 20:53:32.201572566","filePath":"null","pinned":false},{"value":".config/vim/undodir/","recorded":"2025-07-31 18:56:22.005260639","filePath":"null","pinned":false},{"value":"\\zs\\d[^ ]*'","recorded":"2025-07-31 18:46:52.538986797","filePath":"null","pinned":false},{"value":"compiledby = \"nix-vim\";\n      lua = true;\n      ruby = true;\n    })","recorded":"2025-07-31 17:58:12.154000717","filePath":"null","pinned":false},{"value":":set viminfo='50,\u003c50,s10,h","recorded":"2025-07-31 17:25:43.010043067","filePath":"null","pinned":false},{"value":"fresh prince cz","recorded":"2025-07-31 15:20:54.382987772","filePath":"null","pinned":false},{"value":"command! -nargs=0 CleanUpUndoFiles !find ~/.vim/tmp/undo -type f -mtime +100d -delete","recorded":"2025-07-31 13:12:49.482888658","filePath":"null","pinned":false},{"value":"/home/libor/.config/vim/undodir","recorded":"2025-07-31 12:55:34.287302913","filePath":"null","pinned":false},{"value":"set undofile\nset undolevels=5000\nset undodir=~/.vim/undodir/\n","recorded":"2025-07-31 12:54:21.320708756","filePath":"null","pinned":false},{"value":"vim-overlay.url = \"github:kawarimidoll/vim-overlay\";","recorded":"2025-07-29 20:24:12.754441634","filePath":"null","pinned":false},{"value":"{\n\n  description = \"My flake\";\n\n  \n  inputs = {\n      nixpkgs.url = \"nixpkgs/nixos-unstable\"; \n      hyprland.url = \"github:hyprwm/Hyprland\";\n      yazi.url = \"github:sxyazi/yazi\";\n      vim-overlay.url = \"/home/libor/vim-overlay\";\n      waybar = {\n          url = \"github:alexays/waybar\";\n          inputs.nixpkgs.follows = \"nixpkgs\";\n      };\n  };\n\n\n  outputs = {\n      self,\n      nixpkgs,\n      waybar,\n      yazi,\n      ... }@inputs:\n\n  {\n      nixosConfigurations = {\n          nixos = nixpkgs.lib.nixosSystem {\n              system = \"x86_64-linux\";\n              specialArgs = { inherit inputs; };\n              modules = [\n                  ./configuration.nix\n                  { nixpkgs.overlays = [ inputs.vim-overlay.overlays.default ];}\n                  ({ pkgs, ... }: {\n                      environment.systemPackages = [\n                          yazi.packages.${pkgs.system}.default\n                          waybar.packages.${pkgs.system}.waybar\n                      ];\n\t\t  })\n              ];\n          };\n      };\n  }; \n}\n\n#####  END OF FILE  #####\n","recorded":"2025-07-29 20:08:37.558783403","filePath":"null","pinned":false},{"value":"/home/libor/vim-overlay","recorded":"2025-07-29 20:01:31.862713862","filePath":"null","pinned":false},{"value":"https://github.com/kawarimidoll/vim-overlay.git","recorded":"2025-07-29 20:00:10.929584890","filePath":"null","pinned":false},{"value":"{\n  description = \"Vim overlay flake\";\n\n  inputs = {\n    nixpkgs.url = \"github:NixOS/nixpkgs/nixpkgs-unstable\";\n    pre-commit-hooks = {\n      url = \"github:cachix/git-hooks.nix\";\n      inputs.nixpkgs.follows = \"nixpkgs\";\n      inputs.nixpkgs-stable.follows = \"nixpkgs\";\n    };\n    vim-src = {\n      url = \"github:vim/vim\";\n      flake = false;\n    };\n  };\n\n  outputs =\n    {\n      self,\n      nixpkgs,\n      vim-src,\n      pre-commit-hooks,\n    }:\n    let\n      supportedSystems = [\n        \"x86_64-linux\"\n        \"aarch64-linux\"\n        \"x86_64-darwin\"\n        \"aarch64-darwin\"\n      ];\n      forAllSystems = nixpkgs.lib.genAttrs supportedSystems;\n\n      make-overlay =\n        {\n          compiledby ? \"vim-overlay\",\n          cscope ? false,\n          lua ? false,\n          # perl ? false, # fail to build...\n          python3 ? false,\n          ruby ? false,\n          sodium ? false,\n        }:\n        final: prev: {\n          vim = prev.vim.overrideAttrs (oldAttrs: {\n            version = \"latest\";\n            src = vim-src;\n            configureFlags =\n              (oldAttrs.configureFlags or [ ])\n              ++ [\n                \"--with-compiledby=${compiledby}\"\n                \"--enable-fail-if-missing\"\n              ]\n              ++ prev.lib.optionals lua [\n                \"--with-lua-prefix=${prev.lua}\"\n                \"--enable-luainterp\"\n              ]\n              ++ prev.lib.optionals python3 [\n                \"--enable-python3interp=yes\"\n                \"--with-python3-command=${prev.python3}/bin/python3\"\n                \"--with-python3-config-dir=${prev.python3}/lib\"\n                # Disable python2\n                \"--disable-pythoninterp\"\n              ]\n              # ++ prev.lib.optional perl \"--enable-perlinterp\"\n              ++ prev.lib.optionals ruby [\n                \"--with-ruby-command=${prev.ruby}/bin/ruby\"\n                \"--enable-rubyinterp\"\n              ]\n              ++ prev.lib.optional cscope \"--enable-cscope\";\n\n            nativeBuildInputs = (oldAttrs.nativeBuildInputs or [ ]) ++ [ prev.pkg-config ];\n\n            buildInputs =\n              (oldAttrs.buildInputs or [ ])\n              ++ [\n                prev.ncurses\n                prev.glib\n              ]\n              ++ prev.lib.optional lua prev.lua\n              ++ prev.lib.optional python3 prev.python3\n              ++ prev.lib.optional ruby prev.ruby\n              # ++ prev.lib.optional perl prev.perl\n              ++ prev.lib.optional sodium prev.libsodium;\n          });\n        };\n\n      vim-overlays = {\n        default = make-overlay { };\n        features = make-overlay;\n      };\n    in\n    {\n      overlays = vim-overlays;\n\n      checks = forAllSystems (system: {\n        pre-commit-check = pre-commit-hooks.lib.${system}.run {\n          src = ./.;\n          hooks = {\n            # format nix\n            nixfmt-rfc-style.enable = true;\n            # format markdown\n            denofmt.enable = true;\n            # check github actions yml\n            actionlint.enable = true;\n          };\n        };\n      });\n\n      devShells = forAllSystems (\n        system:\n        let\n          pkgs = import nixpkgs { inherit system; };\n          pre-commit-check = self.checks.${system}.pre-commit-check;\n        in\n        {\n          default = pkgs.mkShell {\n            inherit (pre-commit-check) shellHook;\n            buildInputs = pre-commit-check.enabledPackages;\n          };\n        }\n      );\n\n      packages = forAllSystems (\n        system:\n        let\n          pkgs = import nixpkgs {\n            inherit system;\n            overlays = [ vim-overlays.default ];\n          };\n        in\n        {\n          vim = pkgs.vim;\n          default = pkgs.vim;\n        }\n      );\n    };\n}","recorded":"2025-07-29 19:57:06.603847862","filePath":"null","pinned":false},{"value":"vim-overlay.url = \"github:kawarimidoll/vim-overlay\";\n  };","recorded":"2025-07-29 18:59:57.034956861","filePath":"null","pinned":false},{"value":"nix build github:kawarimidoll/vim-overlay","recorded":"2025-07-28 16:56:13.159273072","filePath":"null","pinned":true},{"value":"{\n\n  description = \"My flake\";\n\n  \n  inputs = {\n      nixpkgs.url = \"nixpkgs/nixos-unstable\"; \n      hyprland.url = \"github:hyprwm/Hyprland\";\n      yazi.url = \"github:sxyazi/yazi\";\n      waybar = {\n          url = \"github:alexays/waybar\";\n          inputs.nixpkgs.follows = \"nixpkgs\";\n      };\n  };\n\n\n  outputs = {\n      self,\n      nixpkgs,\n      waybar,\n      yazi,\n      ... }@inputs:\n\n  {\n      nixosConfigurations = {\n          nixos = nixpkgs.lib.nixosSystem {\n              system = \"x86_64-linux\";\n              specialArgs = { inherit inputs; };\n              modules = [\n                  ./configuration.nix\n                  ({ pkgs, ... }: {\n                      environment.systemPackages = [\n                          yazi.packages.${pkgs.system}.default\n                          waybar.packages.${pkgs.system}.waybar\n                      ];\n\t\t  })\n              ];\n          };\n      };\n  }; \n}\n","recorded":"2025-07-28 16:00:16.870852374","filePath":"null","pinned":false},{"value":"{\n\n  description = \"My flake\";\n\n  \n  inputs = {\n      nixpkgs.url = \"nixpkgs/nixos-unstable\"; \n      hyprland.url = \"github:hyprwm/Hyprland\";\n      yazi.url = \"github:sxyazi/yazi\";\n      waybar = {\n          url = \"github:alexays/waybar\";\n          inputs.nixpkgs.follows = \"nixpkgs\";\n      };\n  };\n\n\n  outputs = {\n      self,\n      nixpkgs,\n      waybar,\n      yazi,\n      ... }@inputs:\n\n  {\n      nixosConfigurations = {\n          nixos = nixpkgs.lib.nixosSystem {\n              system = \"x86_64-linux\";\n              specialArgs = { inherit inputs; };\n              modules = [\n                  ./configuration.nix\n                  ({ pkgs, ... }: {\n                      environment.systemPackages = [\n                          yazi.packages.${pkgs.system}.default\n                          waybar.packages.${pkgs.system}.waybar\n                      ];\n\t\t  })\n              ];\n          };\n      };\n  }; \n}","recorded":"2025-07-28 15:57:11.195984581","filePath":"null","pinned":false},{"value":"{\n\n  description = \"My flake\";\n\n  \n  inputs = {\n      nixpkgs.url = \"nixpkgs/nixos-unstable\"; \n      hyprland.url = \"github:hyprwm/Hyprland\";\n      yazi.url = \"github:sxyazi/yazi\";\n      waybar = {\n          url = \"github:alexays/waybar\";\n          inputs.nixpkgs.follows = \"nixpkgs\";\n      };\n  };\n\n\n  outputs = {\n      self,\n      nixpkgs,\n      waybar,\n      yazi,\n      ... }@inputs:\n\n  {\n      nixosConfigurations = {\n          nixos = nixpkgs.lib.nixosSystem {\n              system = \"x86_64-linux\";\n              specialArgs = { inherit inputs; };\n              modules = [\n                  ./configuration.nix\n                  ({ pkgs, ... }: {\n                      environment.systemPackages = [\n                          yazi.packages.${pkgs.system}.default\n                          waybar.packages.${pkgs.system}.waybar\n                      ];\n\t\t  })\n              ];\n          };\n      };\n  }; \n}\n\n#####  END OF FILE  #####\n","recorded":"2025-07-28 15:53:52.892158291","filePath":"null","pinned":false},{"value":"sha256-tWaU7GOOrv8UuQlFWv4u7C5CW1cqaPEIkY8fUzvj3gE=","recorded":"2025-07-27 13:29:54.702844856","filePath":"null","pinned":false},{"value":"b84ab0288f36145b4e9c095f68bf673ad6f69cd4","recorded":"2025-07-27 13:26:50.635020665","filePath":"null","pinned":false},{"value":"sha256-u0LsKNdTpdWE507MsiA9NOS7WTAfPJTVRwhAL2fKExw=","recorded":"2025-07-27 12:57:28.669923955","filePath":"null","pinned":false},{"value":"d0bf380efa4ab0aabc5479274043f0de1115a232","recorded":"2025-07-27 12:55:50.976352770","filePath":"null","pinned":false},{"value":"sha256-erutF13lCW8+TkcYiG5NYZ7Hu63ttB+/CDClLwRppWU=","recorded":"2025-07-27 12:53:03.913146769","filePath":"null","pinned":false},{"value":"13e1af7de9daba5f617d24295b8aaf894bf8c201","recorded":"2025-07-27 12:51:48.463667452","filePath":"null","pinned":false},{"value":"1dMrGax/+D+yHlN+skR5E7MOqSqL3TJvZhLWapL3qTI=","recorded":"2025-07-27 12:41:20.907492964","filePath":"null","pinned":false},{"value":"1c2c4ecb4c46524841e714c3a41085d60c13ee6d","recorded":"2025-07-27 12:38:50.482295066","filePath":"null","pinned":false},{"value":"u0LsKNdTpdWE507MsiA9NOS7WTAfPJTVRwhAL2fKExw=","recorded":"2025-07-27 02:02:13.185759060","filePath":"null","pinned":false},{"value":"\"Sta\\305\\276en\\303\\251/\"","recorded":"2025-07-26 16:59:52.197221196","filePath":"null","pinned":false},{"value":"pidof hyprlock || hyprlock","recorded":"2025-07-26 14:27:04.536439900","filePath":"null","pinned":false},{"value":"wlogout -b 1 -T 250 -B 330 -L 590 -R 590 -c 5 -r 5 -l .config/wlogout/power","recorded":"2025-07-26 14:13:46.514308681","filePath":"null","pinned":false},{"value":".config/QtProject.conf","recorded":"2025-07-26 12:29:44.403389995","filePath":"null","pinned":false},{"value":".config/libreoffice/4/user/store/","recorded":"2025-07-26 12:29:13.328274006","filePath":"null","pinned":false},{"value":"Failed to load module \"colorreload-gtk-module","recorded":"2025-07-25 23:38:55.842026275","filePath":"null","pinned":false},{"value":"BFBFBF","recorded":"2025-07-25 21:35:13.799418603","filePath":"null","pinned":false},{"value":"height: 200px;\n  width: 50%;","recorded":"2025-07-25 21:27:18.345186681","filePath":"null","pinned":false},{"value":"{ config, lib, pkgs, ... }:\n\nlet\n  yabai = pkgs.yabai.overrideAttrs (oldAttrs: rec {\n    inherit (oldAttrs) name;\n    version = \"4.0.0\";\n    src = pkgs.fetchFromGitHub {\n      owner = \"koekeishiya\";\n      repo = name;\n      rev = \"v${version}\";\n      sha256 = lib.fakeSha256;\n    };\n  });\nin {\n  environment.defaultPackages = with pkgs; [\n    yabai\n  ];\n}","recorded":"2025-07-25 11:58:05.945817618","filePath":"null","pinned":false},{"value":"yazi.cachix.org-1:Dcdz63NZKfvUCbDGngQDAZq6kOroIrFoyO064uvLh8k=","recorded":"2025-07-25 01:14:54.980580906","filePath":"null","pinned":false},{"value":"\"https://yazi.cachix.org\"","recorded":"2025-07-25 01:13:22.942548235","filePath":"null","pinned":false},{"value":"/home/libor/.config/yazi/yazi.toml","recorded":"2025-07-24 15:29:01.961267003","filePath":"null","pinned":false},{"value":"","recorded":"2025-07-24 12:43:09.588209559","filePath":"null","pinned":true},{"value":"[AdwStyleManager]\ncolor-scheme=ADW_COLOR_SCHEME_PREFER_DARK","recorded":"2025-07-24 11:22:38.724210240","filePath":"null","pinned":true},{"value":"","recorded":"2025-07-23 20:44:36.869429442","filePath":"null","pinned":true},{"value":"","recorded":"2025-07-23 20:40:24.414580022","filePath":"null","pinned":true},{"value":"⏾","recorded":"2025-07-23 13:36:44.061426517","filePath":"null","pinned":true},{"value":"󰗽","recorded":"2025-07-23 13:35:31.050456951","filePath":"null","pinned":true},{"value":"","recorded":"2025-07-23 13:34:06.131844947","filePath":"null","pinned":true},{"value":"","recorded":"2025-07-23 13:31:22.843362643","filePath":"null","pinned":true},{"value":"dd bs=4M if=path/to/.iso of=/dev/My_flash_drive conv=fsync oflag=direct status=progress","recorded":"2025-07-13 11:06:01.009516198","filePath":"null","pinned":true},{"value":"","recorded":"2025-07-12 18:19:59.635054043","filePath":"null","pinned":true},{"value":"💾","recorded":"2025-05-05 12:52:00.914208423","filePath":"null","pinned":true},{"value":"sudo nix-env -p /nix/var/nix/profiles/system --list-generations | awk '{print $1}'| paste -s -d \" \"","recorded":"2024-12-05 11:23:51.058993672","filePath":"null","pinned":true},{"value":"","recorded":"2024-12-03 14:45:44.142811057","filePath":"null","pinned":true}]}