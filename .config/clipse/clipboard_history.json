{"clipboardHistory":[{"value":"GTK_THEME=Adwaita:","recorded":"2025-08-04 19:49:35.268883107","filePath":"null","pinned":false},{"value":"/home/libor/.local/src/vim/runtime/defaults.vim","recorded":"2025-08-01 17:16:18.090314455","filePath":"null","pinned":false},{"value":"/home/libor/.local/src/vim/runtime/vimrc_example.vim","recorded":"2025-08-01 17:03:28.700229827","filePath":"null","pinned":false},{"value":"nix-shell -p gnumake gcc clang ncurses vim-full xorg.libXt libgtkflow3","recorded":"2025-08-01 16:25:53.335869397","filePath":"null","pinned":true},{"value":"libgtkflow3","recorded":"2025-08-01 16:21:12.744722982","filePath":"null","pinned":false},{"value":"xorg.libXt","recorded":"2025-08-01 16:21:01.679094556","filePath":"null","pinned":false},{"value":"x11basic","recorded":"2025-08-01 16:12:07.654503224","filePath":"null","pinned":false},{"value":"include \u003cX11/Xlib.h\u003e\n","recorded":"2025-08-01 16:08:53.349437134","filePath":"null","pinned":false},{"value":"--enable-fail-if-missing","recorded":"2025-08-01 15:58:40.900645596","filePath":"null","pinned":false},{"value":"./configure --with-features=huge --enable-multibyte --enable-rubyinterp=yes --enable-pythoninterp=yes --enable-python3interp=yes --enable-perlinterp=yes --enable-luainterp=yes --enable-cscope --prefix=/home/libor/.nix-profile/","recorded":"2025-08-01 15:34:01.971860323","filePath":"null","pinned":false},{"value":"./configure --with-features=huge --enable-multibyte --enable-rubyinterp=yes --enable-pythoninterp=yes --enable-python3interp=yes --enable-perlinterp=yes --enable-luainterp=yes --enable-cscope --prefix=/usr/local","recorded":"2025-08-01 15:33:05.830412058","filePath":"null","pinned":false},{"value":"/home/libor/.local/src/vim/src/vim","recorded":"2025-08-01 15:21:47.198074135","filePath":"null","pinned":false},{"value":"Caught deadly signal ABRT","recorded":"2025-08-01 15:03:00.663244136","filePath":"null","pinned":false},{"value":"libtool: command not found","recorded":"2025-08-01 15:00:22.418106590","filePath":"null","pinned":false},{"value":"-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1 ","recorded":"2025-08-01 14:37:06.410049398","filePath":"null","pinned":false},{"value":"Vim: Caught deadly signal ABRT","recorded":"2025-08-01 14:11:11.975092788","filePath":"null","pinned":false},{"value":"*** buffer overflow detected ***: terminated","recorded":"2025-08-01 14:10:02.514403180","filePath":"null","pinned":false},{"value":"/home/libor/.local/bin/bin/vim","recorded":"2025-08-01 13:57:23.638503969","filePath":"null","pinned":false},{"value":"[AQ] Implementation wayland failed, erasing","recorded":"2025-08-01 11:42:09.112739114","filePath":"null","pinned":false},{"value":"Cannot open backend: no allocator available\n","recorded":"2025-08-01 11:33:53.335637917","filePath":"null","pinned":false},{"value":"loginctl kill-user $(whoami)","recorded":"2025-08-01 11:21:20.917167638","filePath":"null","pinned":false},{"value":"31cc7f3b87d1d9670b66e73e3720da2e2da49acd","recorded":"2025-08-01 10:48:11.799636107","filePath":"null","pinned":false},{"value":" matchstr(execute('version'), 'Vi IMproved \\zs\\d[^ ]*')\n","recorded":"2025-07-31 20:53:32.201572566","filePath":"null","pinned":false},{"value":".config/vim/undodir/","recorded":"2025-07-31 18:56:22.005260639","filePath":"null","pinned":false},{"value":"\\zs\\d[^ ]*'","recorded":"2025-07-31 18:46:52.538986797","filePath":"null","pinned":false},{"value":"compiledby = \"nix-vim\";\n      lua = true;\n      ruby = true;\n    })","recorded":"2025-07-31 17:58:12.154000717","filePath":"null","pinned":false},{"value":":set viminfo='50,\u003c50,s10,h","recorded":"2025-07-31 17:25:43.010043067","filePath":"null","pinned":false},{"value":"fresh prince cz","recorded":"2025-07-31 15:20:54.382987772","filePath":"null","pinned":false},{"value":"command! -nargs=0 CleanUpUndoFiles !find ~/.vim/tmp/undo -type f -mtime +100d -delete","recorded":"2025-07-31 13:12:49.482888658","filePath":"null","pinned":false},{"value":"/home/libor/.config/vim/undodir","recorded":"2025-07-31 12:55:34.287302913","filePath":"null","pinned":false},{"value":"set undofile\nset undolevels=5000\nset undodir=~/.vim/undodir/\n","recorded":"2025-07-31 12:54:21.320708756","filePath":"null","pinned":false},{"value":"vim-overlay.url = \"github:kawarimidoll/vim-overlay\";","recorded":"2025-07-29 20:24:12.754441634","filePath":"null","pinned":false},{"value":"{\n\n  description = \"My flake\";\n\n  \n  inputs = {\n      nixpkgs.url = \"nixpkgs/nixos-unstable\"; \n      hyprland.url = \"github:hyprwm/Hyprland\";\n      yazi.url = \"github:sxyazi/yazi\";\n      vim-overlay.url = \"/home/libor/vim-overlay\";\n      waybar = {\n          url = \"github:alexays/waybar\";\n          inputs.nixpkgs.follows = \"nixpkgs\";\n      };\n  };\n\n\n  outputs = {\n      self,\n      nixpkgs,\n      waybar,\n      yazi,\n      ... }@inputs:\n\n  {\n      nixosConfigurations = {\n          nixos = nixpkgs.lib.nixosSystem {\n              system = \"x86_64-linux\";\n              specialArgs = { inherit inputs; };\n              modules = [\n                  ./configuration.nix\n                  { nixpkgs.overlays = [ inputs.vim-overlay.overlays.default ];}\n                  ({ pkgs, ... }: {\n                      environment.systemPackages = [\n                          yazi.packages.${pkgs.system}.default\n                          waybar.packages.${pkgs.system}.waybar\n                      ];\n\t\t  })\n              ];\n          };\n      };\n  }; \n}\n\n#####  END OF FILE  #####\n","recorded":"2025-07-29 20:08:37.558783403","filePath":"null","pinned":false},{"value":"/home/libor/vim-overlay","recorded":"2025-07-29 20:01:31.862713862","filePath":"null","pinned":false},{"value":"https://github.com/kawarimidoll/vim-overlay.git","recorded":"2025-07-29 20:00:10.929584890","filePath":"null","pinned":false},{"value":"{\n  description = \"Vim overlay flake\";\n\n  inputs = {\n    nixpkgs.url = \"github:NixOS/nixpkgs/nixpkgs-unstable\";\n    pre-commit-hooks = {\n      url = \"github:cachix/git-hooks.nix\";\n      inputs.nixpkgs.follows = \"nixpkgs\";\n      inputs.nixpkgs-stable.follows = \"nixpkgs\";\n    };\n    vim-src = {\n      url = \"github:vim/vim\";\n      flake = false;\n    };\n  };\n\n  outputs =\n    {\n      self,\n      nixpkgs,\n      vim-src,\n      pre-commit-hooks,\n    }:\n    let\n      supportedSystems = [\n        \"x86_64-linux\"\n        \"aarch64-linux\"\n        \"x86_64-darwin\"\n        \"aarch64-darwin\"\n      ];\n      forAllSystems = nixpkgs.lib.genAttrs supportedSystems;\n\n      make-overlay =\n        {\n          compiledby ? \"vim-overlay\",\n          cscope ? false,\n          lua ? false,\n          # perl ? false, # fail to build...\n          python3 ? false,\n          ruby ? false,\n          sodium ? false,\n        }:\n        final: prev: {\n          vim = prev.vim.overrideAttrs (oldAttrs: {\n            version = \"latest\";\n            src = vim-src;\n            configureFlags =\n              (oldAttrs.configureFlags or [ ])\n              ++ [\n                \"--with-compiledby=${compiledby}\"\n                \"--enable-fail-if-missing\"\n              ]\n              ++ prev.lib.optionals lua [\n                \"--with-lua-prefix=${prev.lua}\"\n                \"--enable-luainterp\"\n              ]\n              ++ prev.lib.optionals python3 [\n                \"--enable-python3interp=yes\"\n                \"--with-python3-command=${prev.python3}/bin/python3\"\n                \"--with-python3-config-dir=${prev.python3}/lib\"\n                # Disable python2\n                \"--disable-pythoninterp\"\n              ]\n              # ++ prev.lib.optional perl \"--enable-perlinterp\"\n              ++ prev.lib.optionals ruby [\n                \"--with-ruby-command=${prev.ruby}/bin/ruby\"\n                \"--enable-rubyinterp\"\n              ]\n              ++ prev.lib.optional cscope \"--enable-cscope\";\n\n            nativeBuildInputs = (oldAttrs.nativeBuildInputs or [ ]) ++ [ prev.pkg-config ];\n\n            buildInputs =\n              (oldAttrs.buildInputs or [ ])\n              ++ [\n                prev.ncurses\n                prev.glib\n              ]\n              ++ prev.lib.optional lua prev.lua\n              ++ prev.lib.optional python3 prev.python3\n              ++ prev.lib.optional ruby prev.ruby\n              # ++ prev.lib.optional perl prev.perl\n              ++ prev.lib.optional sodium prev.libsodium;\n          });\n        };\n\n      vim-overlays = {\n        default = make-overlay { };\n        features = make-overlay;\n      };\n    in\n    {\n      overlays = vim-overlays;\n\n      checks = forAllSystems (system: {\n        pre-commit-check = pre-commit-hooks.lib.${system}.run {\n          src = ./.;\n          hooks = {\n            # format nix\n            nixfmt-rfc-style.enable = true;\n            # format markdown\n            denofmt.enable = true;\n            # check github actions yml\n            actionlint.enable = true;\n          };\n        };\n      });\n\n      devShells = forAllSystems (\n        system:\n        let\n          pkgs = import nixpkgs { inherit system; };\n          pre-commit-check = self.checks.${system}.pre-commit-check;\n        in\n        {\n          default = pkgs.mkShell {\n            inherit (pre-commit-check) shellHook;\n            buildInputs = pre-commit-check.enabledPackages;\n          };\n        }\n      );\n\n      packages = forAllSystems (\n        system:\n        let\n          pkgs = import nixpkgs {\n            inherit system;\n            overlays = [ vim-overlays.default ];\n          };\n        in\n        {\n          vim = pkgs.vim;\n          default = pkgs.vim;\n        }\n      );\n    };\n}","recorded":"2025-07-29 19:57:06.603847862","filePath":"null","pinned":false},{"value":"vim-overlay.url = \"github:kawarimidoll/vim-overlay\";\n  };","recorded":"2025-07-29 18:59:57.034956861","filePath":"null","pinned":false},{"value":"nix build github:kawarimidoll/vim-overlay","recorded":"2025-07-28 16:56:13.159273072","filePath":"null","pinned":true},{"value":"{\n\n  description = \"My flake\";\n\n  \n  inputs = {\n      nixpkgs.url = \"nixpkgs/nixos-unstable\"; \n      hyprland.url = \"github:hyprwm/Hyprland\";\n      yazi.url = \"github:sxyazi/yazi\";\n      waybar = {\n          url = \"github:alexays/waybar\";\n          inputs.nixpkgs.follows = \"nixpkgs\";\n      };\n  };\n\n\n  outputs = {\n      self,\n      nixpkgs,\n      waybar,\n      yazi,\n      ... }@inputs:\n\n  {\n      nixosConfigurations = {\n          nixos = nixpkgs.lib.nixosSystem {\n              system = \"x86_64-linux\";\n              specialArgs = { inherit inputs; };\n              modules = [\n                  ./configuration.nix\n                  ({ pkgs, ... }: {\n                      environment.systemPackages = [\n                          yazi.packages.${pkgs.system}.default\n                          waybar.packages.${pkgs.system}.waybar\n                      ];\n\t\t  })\n              ];\n          };\n      };\n  }; \n}\n","recorded":"2025-07-28 16:00:16.870852374","filePath":"null","pinned":false},{"value":"{\n\n  description = \"My flake\";\n\n  \n  inputs = {\n      nixpkgs.url = \"nixpkgs/nixos-unstable\"; \n      hyprland.url = \"github:hyprwm/Hyprland\";\n      yazi.url = \"github:sxyazi/yazi\";\n      waybar = {\n          url = \"github:alexays/waybar\";\n          inputs.nixpkgs.follows = \"nixpkgs\";\n      };\n  };\n\n\n  outputs = {\n      self,\n      nixpkgs,\n      waybar,\n      yazi,\n      ... }@inputs:\n\n  {\n      nixosConfigurations = {\n          nixos = nixpkgs.lib.nixosSystem {\n              system = \"x86_64-linux\";\n              specialArgs = { inherit inputs; };\n              modules = [\n                  ./configuration.nix\n                  ({ pkgs, ... }: {\n                      environment.systemPackages = [\n                          yazi.packages.${pkgs.system}.default\n                          waybar.packages.${pkgs.system}.waybar\n                      ];\n\t\t  })\n              ];\n          };\n      };\n  }; \n}","recorded":"2025-07-28 15:57:11.195984581","filePath":"null","pinned":false},{"value":"{\n\n  description = \"My flake\";\n\n  \n  inputs = {\n      nixpkgs.url = \"nixpkgs/nixos-unstable\"; \n      hyprland.url = \"github:hyprwm/Hyprland\";\n      yazi.url = \"github:sxyazi/yazi\";\n      waybar = {\n          url = \"github:alexays/waybar\";\n          inputs.nixpkgs.follows = \"nixpkgs\";\n      };\n  };\n\n\n  outputs = {\n      self,\n      nixpkgs,\n      waybar,\n      yazi,\n      ... }@inputs:\n\n  {\n      nixosConfigurations = {\n          nixos = nixpkgs.lib.nixosSystem {\n              system = \"x86_64-linux\";\n              specialArgs = { inherit inputs; };\n              modules = [\n                  ./configuration.nix\n                  ({ pkgs, ... }: {\n                      environment.systemPackages = [\n                          yazi.packages.${pkgs.system}.default\n                          waybar.packages.${pkgs.system}.waybar\n                      ];\n\t\t  })\n              ];\n          };\n      };\n  }; \n}\n\n#####  END OF FILE  #####\n","recorded":"2025-07-28 15:53:52.892158291","filePath":"null","pinned":false},{"value":"sha256-tWaU7GOOrv8UuQlFWv4u7C5CW1cqaPEIkY8fUzvj3gE=","recorded":"2025-07-27 13:29:54.702844856","filePath":"null","pinned":false},{"value":"b84ab0288f36145b4e9c095f68bf673ad6f69cd4","recorded":"2025-07-27 13:26:50.635020665","filePath":"null","pinned":false},{"value":"sha256-u0LsKNdTpdWE507MsiA9NOS7WTAfPJTVRwhAL2fKExw=","recorded":"2025-07-27 12:57:28.669923955","filePath":"null","pinned":false},{"value":"d0bf380efa4ab0aabc5479274043f0de1115a232","recorded":"2025-07-27 12:55:50.976352770","filePath":"null","pinned":false},{"value":"sha256-erutF13lCW8+TkcYiG5NYZ7Hu63ttB+/CDClLwRppWU=","recorded":"2025-07-27 12:53:03.913146769","filePath":"null","pinned":false},{"value":"13e1af7de9daba5f617d24295b8aaf894bf8c201","recorded":"2025-07-27 12:51:48.463667452","filePath":"null","pinned":false},{"value":"1dMrGax/+D+yHlN+skR5E7MOqSqL3TJvZhLWapL3qTI=","recorded":"2025-07-27 12:41:20.907492964","filePath":"null","pinned":false},{"value":"1c2c4ecb4c46524841e714c3a41085d60c13ee6d","recorded":"2025-07-27 12:38:50.482295066","filePath":"null","pinned":false},{"value":"u0LsKNdTpdWE507MsiA9NOS7WTAfPJTVRwhAL2fKExw=","recorded":"2025-07-27 02:02:13.185759060","filePath":"null","pinned":false},{"value":"\"Sta\\305\\276en\\303\\251/\"","recorded":"2025-07-26 16:59:52.197221196","filePath":"null","pinned":false},{"value":"pidof hyprlock || hyprlock","recorded":"2025-07-26 14:27:04.536439900","filePath":"null","pinned":false},{"value":"wlogout -b 1 -T 250 -B 330 -L 590 -R 590 -c 5 -r 5 -l .config/wlogout/power","recorded":"2025-07-26 14:13:46.514308681","filePath":"null","pinned":false},{"value":".config/QtProject.conf","recorded":"2025-07-26 12:29:44.403389995","filePath":"null","pinned":false},{"value":".config/libreoffice/4/user/store/","recorded":"2025-07-26 12:29:13.328274006","filePath":"null","pinned":false},{"value":"Failed to load module \"colorreload-gtk-module","recorded":"2025-07-25 23:38:55.842026275","filePath":"null","pinned":false},{"value":"BFBFBF","recorded":"2025-07-25 21:35:13.799418603","filePath":"null","pinned":false},{"value":"height: 200px;\n  width: 50%;","recorded":"2025-07-25 21:27:18.345186681","filePath":"null","pinned":false},{"value":"{ config, lib, pkgs, ... }:\n\nlet\n  yabai = pkgs.yabai.overrideAttrs (oldAttrs: rec {\n    inherit (oldAttrs) name;\n    version = \"4.0.0\";\n    src = pkgs.fetchFromGitHub {\n      owner = \"koekeishiya\";\n      repo = name;\n      rev = \"v${version}\";\n      sha256 = lib.fakeSha256;\n    };\n  });\nin {\n  environment.defaultPackages = with pkgs; [\n    yabai\n  ];\n}","recorded":"2025-07-25 11:58:05.945817618","filePath":"null","pinned":false},{"value":"yazi.cachix.org-1:Dcdz63NZKfvUCbDGngQDAZq6kOroIrFoyO064uvLh8k=","recorded":"2025-07-25 01:14:54.980580906","filePath":"null","pinned":false},{"value":"\"https://yazi.cachix.org\"","recorded":"2025-07-25 01:13:22.942548235","filePath":"null","pinned":false},{"value":"/home/libor/.config/yazi/yazi.toml","recorded":"2025-07-24 15:29:01.961267003","filePath":"null","pinned":false},{"value":"/home/libor/.dotfiles/icons/kalk.png","recorded":"2025-07-24 15:28:02.781119668","filePath":"null","pinned":false},{"value":"","recorded":"2025-07-24 12:43:09.588209559","filePath":"null","pinned":true},{"value":"[AdwStyleManager]\ncolor-scheme=ADW_COLOR_SCHEME_PREFER_DARK","recorded":"2025-07-24 11:22:38.724210240","filePath":"null","pinned":true},{"value":"AdwStyleManager","recorded":"2025-07-24 11:14:45.790893953","filePath":"null","pinned":false},{"value":"#taskbar button {\n    border-radius: 15px;\n}","recorded":"2025-07-24 09:54:21.365107108","filePath":"null","pinned":false},{"value":"","recorded":"2025-07-23 20:44:36.869429442","filePath":"null","pinned":true},{"value":"","recorded":"2025-07-23 20:40:24.414580022","filePath":"null","pinned":true},{"value":"layerrule = rule, address","recorded":"2025-07-23 20:03:44.663826449","filePath":"null","pinned":false},{"value":"menu {\n\tborder-radius: 15px;\n\tbackground: #161320;\n\tcolor: #B5E8E0;\n}\nmenuitem {\n\tborder-radius: 15px;\n}","recorded":"2025-07-23 19:45:05.056257904","filePath":"null","pinned":false},{"value":"#custom-fm{\n        font-size: 19px;\n        background-image: url('/home/libor/.dotfiles/icons/skener.png');\n        background-position: center;\n        background-repeat: no-repeat;\n        background-size: contain;\n}\n","recorded":"2025-07-23 18:21:00.525809099","filePath":"null","pinned":false},{"value":"pkill $kalk || $kalk","recorded":"2025-07-23 17:19:07.631375072","filePath":"null","pinned":false},{"value":"~/.config/waybar/config","recorded":"2025-07-23 16:49:17.322472227","filePath":"null","pinned":false},{"value":"\"custom/launcher\": {\n        //\"format\":\"\u003cU+F44E\u003e\",\n        \"format\":\"    \",\n        \"tooltip\": false,\n        \"on-click\": \"exec nwg-drawer -c 7 -is 70 -spacing 23\",\n     },","recorded":"2025-07-23 16:49:02.909473189","filePath":"null","pinned":false},{"value":"~/.config/waybar/style.css","recorded":"2025-07-23 16:48:18.326715148","filePath":"null","pinned":false},{"value":"/home/libor/.dotfiles/icons/textedit.png","recorded":"2025-07-23 16:45:01.770631272","filePath":"null","pinned":false},{"value":"url('/home/libor/.dotfiles/icons/libreoffice.png'","recorded":"2025-07-23 16:26:05.567341183","filePath":"null","pinned":false},{"value":"/home/libor/.dotfiles/icons/libreoffice.png","recorded":"2025-07-23 16:20:40.655311656","filePath":"null","pinned":false},{"value":"#custom-launcher{\n        font-size: 20px;\n        background-image: url('/home/siddharth/.config/waybar/dr460nized-start.png');\n        background-position: center;\n        background-repeat: no-repeat;\n        background-size: contain;\n}","recorded":"2025-07-23 16:19:54.021172741","filePath":"null","pinned":false},{"value":"        \u003cchild\u003e\n            \u003cobject class=\"GtkSeparatorMenuItem\" id=\"delimiter1\"/\u003e\n        \u003c/child\u003e\n","recorded":"2025-07-23 15:00:05.036851440","filePath":"null","pinned":false},{"value":"⏾","recorded":"2025-07-23 13:36:44.061426517","filePath":"null","pinned":true},{"value":"󰗽","recorded":"2025-07-23 13:35:31.050456951","filePath":"null","pinned":true},{"value":"","recorded":"2025-07-23 13:34:06.131844947","filePath":"null","pinned":true},{"value":"","recorded":"2025-07-23 13:31:22.843362643","filePath":"null","pinned":true},{"value":"substituters = [\"https://hyprland.cachix.org\"];\n    trusted-substituters = [\"https://hyprland.cachix.org\"];\n    trusted-public-keys = [\"hyprland.cachix.org-1:a7pgxzMz7+chwVL3/pzj6jIBMioiJM7ypFP8PwtkuGc=\"];","recorded":"2025-07-21 22:31:12.268721543","filePath":"null","pinned":false},{"value":"portalPackage = inputs.hyprland.packages.${pkgs.stdenv.hostPlatform.system}.xdg-desktop-portal-hyprland;","recorded":"2025-07-21 22:28:25.687332944","filePath":"null","pinned":false},{"value":"package = inputs.hyprland.packages.${pkgs.stdenv.hostPlatform.system}.hyprland;","recorded":"2025-07-21 22:27:33.979840691","filePath":"null","pinned":false},{"value":"inputs.hyprland.url = \"github:hyprwm/Hyprland\";","recorded":"2025-07-21 22:26:40.630444162","filePath":"null","pinned":false},{"value":"39d6d80f6419b05e3358d950d9ee8601b152b8f9","recorded":"2025-07-21 22:26:19.957245357","filePath":"null","pinned":false},{"value":"6d3b93bbf7e6f069a3c3f8539745989938a4dfea","recorded":"2025-07-21 22:00:23.408483991","filePath":"null","pinned":false},{"value":"2dc2b5ccfd368a3cd2fb27d2d1ece05bf0582441","recorded":"2025-07-21 21:45:41.283765932","filePath":"null","pinned":false},{"value":"github:juliosueiras-nix/nix-security#base.vim","recorded":"2025-07-21 21:36:18.559781914","filePath":"null","pinned":false},{"value":"e45883088d5d75515632729157231fdd8ac0e4a5","recorded":"2025-07-21 19:09:26.611228641","filePath":"null","pinned":false},{"value":"sha256-zyPtFqfJPzlb/QBxQ0j3hzWe9+0kTFH/XQ3aGp2jc2w=","recorded":"2025-07-21 18:55:54.988286456","filePath":"null","pinned":false},{"value":"dd bs=4M if=path/to/.iso of=/dev/My_flash_drive conv=fsync oflag=direct status=progress","recorded":"2025-07-13 11:06:01.009516198","filePath":"null","pinned":true},{"value":"","recorded":"2025-07-12 18:19:59.635054043","filePath":"null","pinned":true},{"value":"💾","recorded":"2025-05-05 12:52:00.914208423","filePath":"null","pinned":true},{"value":"sudo nix-env -p /nix/var/nix/profiles/system --list-generations | awk '{print $1}'| paste -s -d \" \"","recorded":"2024-12-05 11:23:51.058993672","filePath":"null","pinned":true},{"value":"","recorded":"2024-12-03 14:45:44.142811057","filePath":"null","pinned":true}]}